{"version":3,"sources":["../../src/redux/index.js"],"names":["Redux","require","_","mitt","thunk","default","reducers","writeToCache","readFromCache","emitter","readState","state","nodes","nodesByType","Map","forEach","node","type","internal","has","set","get","id","e","multi","dispatch","next","action","Array","isArray","filter","Boolean","map","configureStore","initialState","createStore","combineReducers","applyMiddleware","store","saveState","getState","pickedState","pick","subscribe","lastAction","emit","module","exports"],"mappings":"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","sourcesContent":["const Redux = require(`redux`)\nconst _ = require(`lodash`)\n\nconst mitt = require(`mitt`)\nconst thunk = require(`redux-thunk`).default\nconst reducers = require(`./reducers`)\nconst { writeToCache, readFromCache } = require(`./persist`)\n\n// Create event emitter for actions\nconst emitter = mitt()\n\n// Read old node data from cache.\nconst readState = () => {\n  try {\n    const state = readFromCache()\n    if (state.nodes) {\n      // re-create nodesByType\n      state.nodesByType = new Map()\n      state.nodes.forEach(node => {\n        const { type } = node.internal\n        if (!state.nodesByType.has(type)) {\n          state.nodesByType.set(type, new Map())\n        }\n        state.nodesByType.get(type).set(node.id, node)\n      })\n    }\n    // jsonDataPaths was removed in the per-page-manifest\n    // changes. Explicitly delete it here to cover case where user\n    // runs gatsby the first time after upgrading.\n    delete state[`jsonDataPaths`]\n    return state\n  } catch (e) {\n    // ignore errors.\n  }\n  return {}\n}\n\n/**\n * Redux middleware handling array of actions\n */\nconst multi = ({ dispatch }) => next => action =>\n  Array.isArray(action) ? action.filter(Boolean).map(dispatch) : next(action)\n\nconst configureStore = initialState =>\n  Redux.createStore(\n    Redux.combineReducers({ ...reducers }),\n    initialState,\n    Redux.applyMiddleware(thunk, multi)\n  )\n\nconst store = configureStore(readState())\n\n// Persist state.\nconst saveState = () => {\n  const state = store.getState()\n  const pickedState = _.pick(state, [\n    `nodes`,\n    `status`,\n    `componentDataDependencies`,\n    `components`,\n    `staticQueryComponents`,\n    `webpackCompilationHash`,\n  ])\n\n  return writeToCache(pickedState)\n}\n\nstore.subscribe(() => {\n  const lastAction = store.getState().lastAction\n  emitter.emit(lastAction.type, lastAction)\n})\n\nmodule.exports = {\n  emitter,\n  store,\n  configureStore,\n  readState,\n  saveState,\n}\n"],"file":"index.js"}