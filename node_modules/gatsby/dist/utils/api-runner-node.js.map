{"version":3,"sources":["../../src/utils/api-runner-node.js"],"names":["_","require","chalk","bindActionCreators","tracer","globalTracer","reporter","getCache","createNodeId","createContentDigest","buildObjectType","buildUnionType","buildInterfaceType","buildInputObjectType","buildEnumType","buildScalarType","emitter","store","getPublicPath","getNonGatsbyCodeFrameFormatted","trackBuildError","decorateEvent","boundPluginActionCreators","doubleBind","boundActionCreators","api","plugin","actionOptions","traceId","name","keys","Object","doubleBoundActionCreators","i","length","key","boundActionCreator","args","undefined","initAPICallTracing","parentSpan","startSpan","spanName","spanArgs","defaultSpanArgs","childOf","merge","getLocalReporter","activity","panicOnBuild","bind","runAPI","gatsbyNode","resolve","spanOptions","pluginSpan","setTag","loadNodeContent","getNodes","getNode","getNodesByType","hasNodeChanged","getNodeAndSavePathDependency","publicActions","restrictedActionsAvailableInAPI","availableActions","dispatch","config","program","getState","pathPrefix","prefixPaths","publicPath","namespacedCreateNodeId","id","tracing","cache","actions","apiFinished","alreadyDisplayed","createPageAction","createPage","warning","stripIndent","bold","possiblyCodeFrame","push","warn","join","localReporter","apiCallArgs","basePath","schema","pluginOptions","Promise","reject","cb","err","val","finish","e","error","pluginName","version","result","apiRunnersActive","apisRunningByTraceId","Map","waitingForCasacadeToFinish","module","exports","pluginSource","promise","res","traceTags","waitForCascadingActions","apiSpanArgs","apiSpan","forEach","value","plugins","flattenedPlugins","implementingPlugins","filter","nodeAPIs","includes","apiRunInstance","span","emit","has","currentCount","get","set","stopQueuedApiRuns","onAPIRunComplete","path","page","actionHandler","action","payload","on","off","results","runPlugin","isEmpty","instance","apisByTraceIdCount","catch","context","message","Error"],"mappings":"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","sourcesContent":["const _ = require(`lodash`)\nconst chalk = require(`chalk`)\nconst { bindActionCreators } = require(`redux`)\n\nconst tracer = require(`opentracing`).globalTracer()\nconst reporter = require(`gatsby-cli/lib/reporter`)\nconst getCache = require(`./get-cache`)\nconst createNodeId = require(`./create-node-id`)\nconst { createContentDigest } = require(`gatsby-core-utils`)\nconst {\n  buildObjectType,\n  buildUnionType,\n  buildInterfaceType,\n  buildInputObjectType,\n  buildEnumType,\n  buildScalarType,\n} = require(`../schema/types/type-builders`)\nconst { emitter, store } = require(`../redux`)\nconst getPublicPath = require(`./get-public-path`)\nconst { getNonGatsbyCodeFrameFormatted } = require(`./stack-trace-utils`)\nconst { trackBuildError, decorateEvent } = require(`gatsby-telemetry`)\n\n// Bind action creators per plugin so we can auto-add\n// metadata to actions they create.\nconst boundPluginActionCreators = {}\nconst doubleBind = (boundActionCreators, api, plugin, actionOptions) => {\n  const { traceId } = actionOptions\n  if (boundPluginActionCreators[plugin.name + api + traceId]) {\n    return boundPluginActionCreators[plugin.name + api + traceId]\n  } else {\n    const keys = Object.keys(boundActionCreators)\n    const doubleBoundActionCreators = {}\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const boundActionCreator = boundActionCreators[key]\n      if (typeof boundActionCreator === `function`) {\n        doubleBoundActionCreators[key] = (...args) => {\n          // Let action callers override who the plugin is. Shouldn't be\n          // used that often.\n          if (args.length === 1) {\n            return boundActionCreator(args[0], plugin, actionOptions)\n          } else if (args.length === 2) {\n            return boundActionCreator(args[0], args[1], actionOptions)\n          }\n          return undefined\n        }\n      }\n    }\n    boundPluginActionCreators[\n      plugin.name + api + traceId\n    ] = doubleBoundActionCreators\n    return doubleBoundActionCreators\n  }\n}\n\nconst initAPICallTracing = parentSpan => {\n  const startSpan = (spanName, spanArgs = {}) => {\n    const defaultSpanArgs = { childOf: parentSpan }\n\n    return tracer.startSpan(spanName, _.merge(defaultSpanArgs, spanArgs))\n  }\n\n  return {\n    tracer,\n    parentSpan,\n    startSpan,\n  }\n}\n\nconst getLocalReporter = (activity, reporter) =>\n  activity\n    ? { ...reporter, panicOnBuild: activity.panicOnBuild.bind(activity) }\n    : reporter\n\nconst runAPI = async (plugin, api, args, activity) => {\n  const gatsbyNode = require(`${plugin.resolve}/gatsby-node`)\n  if (gatsbyNode[api]) {\n    const parentSpan = args && args.parentSpan\n    const spanOptions = parentSpan ? { childOf: parentSpan } : {}\n    const pluginSpan = tracer.startSpan(`run-plugin`, spanOptions)\n\n    pluginSpan.setTag(`api`, api)\n    pluginSpan.setTag(`plugin`, plugin.name)\n\n    const {\n      loadNodeContent,\n      getNodes,\n      getNode,\n      getNodesByType,\n      hasNodeChanged,\n      getNodeAndSavePathDependency,\n    } = require(`../db/nodes`)\n    const {\n      publicActions,\n      restrictedActionsAvailableInAPI,\n    } = require(`../redux/actions`)\n    const availableActions = {\n      ...publicActions,\n      ...(restrictedActionsAvailableInAPI[api] || {}),\n    }\n    const boundActionCreators = bindActionCreators(\n      availableActions,\n      store.dispatch\n    )\n    const doubleBoundActionCreators = doubleBind(\n      boundActionCreators,\n      api,\n      plugin,\n      { ...args, parentSpan: pluginSpan, activity }\n    )\n\n    const { config, program } = store.getState()\n\n    const pathPrefix = (program.prefixPaths && config.pathPrefix) || ``\n    const publicPath = getPublicPath({ ...config, ...program }, ``)\n\n    const namespacedCreateNodeId = id => createNodeId(id, plugin.name)\n\n    const tracing = initAPICallTracing(pluginSpan)\n\n    const cache = getCache(plugin.name)\n\n    // Ideally this would be more abstracted and applied to more situations, but right now\n    // this can be potentially breaking so targeting `createPages` API and `createPage` action\n    let actions = doubleBoundActionCreators\n    let apiFinished = false\n    if (api === `createPages`) {\n      let alreadyDisplayed = false\n      const createPageAction = actions.createPage\n      // create new actions object with wrapped createPage action\n      // doubleBoundActionCreators is memoized, so we can't just\n      // reassign createPage field as this would cause this extra logic\n      // to be used in subsequent APIs and we only want to target this `createPages` call.\n      actions = {\n        ...actions,\n        createPage: (...args) => {\n          createPageAction(...args)\n          if (apiFinished && !alreadyDisplayed) {\n            const warning = [\n              reporter.stripIndent(`\n              Action ${chalk.bold(\n                `createPage`\n              )} was called outside of its expected asynchronous lifecycle ${chalk.bold(\n                `createPages`\n              )} in ${chalk.bold(plugin.name)}.\n              Ensure that you return a Promise from ${chalk.bold(\n                `createPages`\n              )} and are awaiting any asynchronous method invocations (like ${chalk.bold(\n                `graphql`\n              )} or http requests).\n              For more info and debugging tips: see ${chalk.bold(\n                `https://gatsby.dev/sync-actions`\n              )}\n            `),\n            ]\n\n            const possiblyCodeFrame = getNonGatsbyCodeFrameFormatted()\n            if (possiblyCodeFrame) {\n              warning.push(possiblyCodeFrame)\n            }\n\n            reporter.warn(warning.join(`\\n\\n`))\n            alreadyDisplayed = true\n          }\n        },\n      }\n    }\n    let localReporter = getLocalReporter(activity, reporter)\n\n    const apiCallArgs = [\n      {\n        ...args,\n        basePath: pathPrefix,\n        pathPrefix: publicPath,\n        boundActionCreators: actions,\n        actions,\n        loadNodeContent,\n        store,\n        emitter,\n        getCache,\n        getNodes,\n        getNode,\n        getNodesByType,\n        hasNodeChanged,\n        reporter: localReporter,\n        getNodeAndSavePathDependency,\n        cache,\n        createNodeId: namespacedCreateNodeId,\n        createContentDigest,\n        tracing,\n        schema: {\n          buildObjectType,\n          buildUnionType,\n          buildInterfaceType,\n          buildInputObjectType,\n          buildEnumType,\n          buildScalarType,\n        },\n      },\n      plugin.pluginOptions,\n    ]\n\n    // If the plugin is using a callback use that otherwise\n    // expect a Promise to be returned.\n    if (gatsbyNode[api].length === 3) {\n      return new Promise((resolve, reject) => {\n        const cb = (err, val) => {\n          pluginSpan.finish()\n          apiFinished = true\n          if (err) reject(err)\n          else resolve(val)\n        }\n\n        try {\n          gatsbyNode[api](...apiCallArgs, cb)\n        } catch (e) {\n          trackBuildError(api, {\n            error: e,\n            pluginName: `${plugin.name}@${plugin.version}`,\n          })\n          throw e\n        }\n      })\n    }\n\n    const result = await gatsbyNode[api](...apiCallArgs)\n    pluginSpan.finish()\n    apiFinished = true\n    return result\n  }\n\n  return null\n}\n\nlet apiRunnersActive = 0\nlet apisRunningByTraceId = new Map()\nlet waitingForCasacadeToFinish = []\n\nmodule.exports = async (api, args = {}, { pluginSource, activity } = {}) => {\n  let resolve\n  let promise = new Promise(res => (resolve = res)) // This is guaranteed to assign to `resolve` in sync\n\n  const { parentSpan, traceId, traceTags, waitForCascadingActions } = args\n\n  const apiSpanArgs = parentSpan ? { childOf: parentSpan } : {}\n  const apiSpan = tracer.startSpan(`run-api`, apiSpanArgs)\n\n  apiSpan.setTag(`api`, api)\n  _.forEach(traceTags, (value, key) => {\n    apiSpan.setTag(key, value)\n  })\n\n  const plugins = store.getState().flattenedPlugins\n\n  // Get the list of plugins that implement this API.\n  // Also: Break infinite loops. Sometimes a plugin will implement an API and\n  // call an action which will trigger the same API being called.\n  // `onCreatePage` is the only example right now. In these cases, we should\n  // avoid calling the originating plugin again.\n  const implementingPlugins = plugins.filter(\n    plugin => plugin.nodeAPIs.includes(api) && plugin.name !== pluginSource\n  )\n\n  const apiRunInstance = {\n    api,\n    resolve,\n    span: apiSpan,\n    traceId,\n  }\n\n  if (waitForCascadingActions) {\n    waitingForCasacadeToFinish.push(apiRunInstance)\n  }\n\n  if (apiRunnersActive === 0) {\n    emitter.emit(`API_RUNNING_START`)\n  }\n  ++apiRunnersActive\n\n  if (apisRunningByTraceId.has(apiRunInstance.traceId)) {\n    const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n    apisRunningByTraceId.set(apiRunInstance.traceId, currentCount + 1)\n  } else {\n    apisRunningByTraceId.set(apiRunInstance.traceId, 1)\n  }\n\n  let stopQueuedApiRuns = false\n  let onAPIRunComplete = null\n  if (api === `onCreatePage`) {\n    const path = args.page.path\n    const actionHandler = action => {\n      if (action.payload.path === path) {\n        stopQueuedApiRuns = true\n      }\n    }\n    emitter.on(`DELETE_PAGE`, actionHandler)\n    onAPIRunComplete = () => {\n      emitter.off(`DELETE_PAGE`, actionHandler)\n    }\n  }\n\n  let results = []\n  for (const plugin of implementingPlugins) {\n    if (stopQueuedApiRuns) {\n      break\n    }\n    let result = await runPlugin(\n      api,\n      plugin,\n      args,\n      stopQueuedApiRuns,\n      activity,\n      apiSpan\n    )\n    results.push(result)\n  }\n\n  if (onAPIRunComplete) {\n    onAPIRunComplete()\n  }\n  // Remove runner instance\n  const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n  apisRunningByTraceId.set(apiRunInstance.traceId, currentCount - 1)\n\n  --apiRunnersActive\n  if (apiRunnersActive === 0) {\n    emitter.emit(`API_RUNNING_QUEUE_EMPTY`)\n  }\n\n  // Filter empty results\n  apiRunInstance.results = results.filter(result => !_.isEmpty(result))\n\n  // Filter out empty responses and return if the\n  // api caller isn't waiting for cascading actions to finish.\n  if (!waitForCascadingActions) {\n    apiSpan.finish()\n    resolve(apiRunInstance.results)\n  }\n\n  // Check if any of our waiters are done.\n  waitingForCasacadeToFinish = waitingForCasacadeToFinish.filter(instance => {\n    // If none of its trace IDs are running, it's done.\n    const apisByTraceIdCount = apisRunningByTraceId.get(instance.traceId)\n    if (apisByTraceIdCount === 0) {\n      instance.span.finish()\n      instance.resolve(instance.results)\n      return false\n    } else {\n      return true\n    }\n  })\n\n  // This promise will resolve with the results for all the plugin calls for this particular api call.\n  // If args.waitForCascadingActions is true, it will wait for all concurrent calls with the same api to resolve.\n  // If args.waitForCascadingActions is false, it should be resolved by the time the code reaches here\n  return promise\n}\n\nfunction runPlugin(api, plugin, args, stopQueuedApiRuns, activity, apiSpan) {\n  return new Promise(resolve => {\n    resolve(runAPI(plugin, api, { ...args, parentSpan: apiSpan }, activity))\n  }).catch(err => {\n    let pluginName =\n      plugin.name === `default-site-plugin` ? `gatsby-node.js` : plugin.name\n\n    decorateEvent(`BUILD_PANIC`, {\n      pluginName: `${plugin.name}@${plugin.version}`,\n    })\n\n    let localReporter = getLocalReporter(activity, reporter)\n\n    localReporter.panicOnBuild({\n      id: `11321`,\n      context: {\n        pluginName,\n        api,\n        message: err instanceof Error ? err.message : err,\n      },\n      error: err instanceof Error ? err : undefined,\n    })\n\n    return null\n  })\n}\n"],"file":"api-runner-node.js"}